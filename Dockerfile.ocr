# OCR Backend Dockerfile
FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04

# 安装系统依赖 - 与Dockerfile.backend保持一致的层结构以利用缓存
RUN apt-get update && apt-get install -y python3 python3-pip && \
    ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# 安装图形库依赖
RUN apt-get install -y \
    libglib2.0-0 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgdk-pixbuf-2.0-0 \
    libffi-dev \
    shared-mime-info \
    libcairo2 \
    libcairo-gobject2

# 安装OCR特定的系统依赖
RUN apt-get install -y \
    python3-dev \
    build-essential \
    libgl1-mesa-glx \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    curl \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# 设置工作目录
WORKDIR /app

# 复制requirements文件
COPY requirements.txt ./

# 安装Python依赖 - 使用与Dockerfile.backend相同的pip源
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

# 复制应用代码
COPY . .

# 创建必要的目录
RUN mkdir -p uploads processed docling_cache docling_models

# 设置权限
RUN chmod +x start.sh

COPY ../clash-for-linux-master ./clash-for-linux-master
RUN chmod +x ./clash-for-linux-master/start.sh && \
    ./clash-for-linux-master/start.sh

RUN proxy_on

# 暴露端口
EXPOSE 7860

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/api/health || exit 1

# 启动命令
CMD ["python", "app.py"]
